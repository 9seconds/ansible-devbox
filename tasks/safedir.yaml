---
# vim: set ft=ansible:


- name: is restic installed
  stat:
    path: ~/.local/bin/restic
  register: stat_restic_bin
  tags: update

- name: ensure directory for binary exists
  file:
    path: ~/.local/bin
    state: directory
  tags: update

- name: ensure directory exists
  file:
    path: ~/.local/bin
    state: directory
  tags: update

- name: download restic
  shell: >
    curl -sfL -o - {{ restic.url | quote }} |
    bzip2 -d > ~/.local/bin/restic &&
    chmod 0755 ~/.local/bin/restic
  args:
    warn: no
  when: not(stat_restic_bin.stat.exists)
  tags: update

- name: update restic
  command: ~/.bin/rbackup update-restic {{ restic.url | quote }}
  when: stat_restic_bin.stat.exists
  tags: update

- name: ensure that config directory is created
  become: true
  file:
    path: /etc/rbackup
    state: directory

- name: ensure that user config directory is created
  file:
    path: ~/.config/rbackup
    state: directory

- name: ensure that safe directory is created
  file:
    path: "{{ ansible_user_dir }}/{{ restic.safe_dir }}"
    state: directory

- name: user config templates for restic
  template:
    src: "{{ item }}.restic.j2"
    dest: "~/.config/rbackup/{{ item }}"
  with_items:
    - excludes
    - password

- name: rbackup config
  become: true
  template:
    src: restic-config.j2
    dest: /etc/rbackup/config

- name: check if backup already created
  stat:
    path: "{{ restic.backup_dir }}"
  register: stat_backup_dir

- name: initialize new repository
  command: ~/.bin/rbackup cmd init
  when: not(stat_backup_dir.stat.exists)

- name: perform first backup
  command: ~/.bin/rbackup create
  when: not(stat_backup_dir.stat.exists)

- name: create systemd user directory
  file:
    path: ~/.config/systemd/user
    state: directory

- name: create safedir timers
  template:
    src: "{{ item }}.j2"
    dest: "~/.config/systemd/user/{{ item }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  with_items:
    - restic-clean.service
    - restic-clean.timer
    - restic-backup.service
    - restic-backup.timer

- name: activate safedir timers
  systemd:
    name: "{{ item }}.timer"
    daemon_reload: yes
    user: yes
    enabled: yes
    state: started
  with_items:
    - restic-clean
    - restic-backup

- name: install rclone
  become: true
  apt:
    deb: https://downloads.rclone.org/rclone-current-linux-amd64.deb
    only_upgrade: yes
